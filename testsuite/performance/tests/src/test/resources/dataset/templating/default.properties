### IDM
# REALM
realm.realm=realm_${index}
realm.displayName=Realm ${index}
realm.enabled=true
realm.registrationAllowed=true
realm.accessTokenLifeSpan=60
realm.passwordPolicy=hashIterations(27500)

# REALM ROLE
realmRole.name=role_${index?string("00")}_of_${realm.realm}
realmRole.description=Role ${index} of ${realm.displayName}

# CLIENT
client.clientId=client_${index?string("00")}_of_${realm.realm}
client.name=Client ${index} of ${realm.displayName}
client.description=Description of ${name}
client.rootUrl=
client.adminUrl=
client.baseUrl=http://clients.${realm.realm}.test/client_${index}
client.enabled=true
client.secret=secret_of_${clientId}
client.redirectUris=${baseUrl},http://load-balancing-domain.test/${clientId}
client.webOrigins=
client.protocol=openid-connect
client.type=<#if index % 3 == 0>public<#elseif index % 3 == 1>bearer-only<#elseif index % 3 == 2>confidential</#if>
client.authorizationServicesEnabled=false
client.serviceAccountsEnabled=false

# CLIENT ROLE
clientRole.name=clientrole_${index?string("00")}_of_${client.clientId}
clientRole.description=Role ${index} of ${client.name}

# USER
user.username=user_${index?string("00")}_of_${realm.realm}
user.enabled=true
user.password=password_of_${username}
user.email=${username}@email.test
user.emailVerified=true
user.firstName=User_${index}
user.lastName=O'Realm_${realm.index}

userAttribute.name=attribute_${index?string("00")}
userAttribute.value=value_of_${name}


### AUTHZ
# RESOURCE TYPE
resourceType.uri=urn:resource_type:dataset_${dataset.index?string("00")}.type_${index}

realmM.realm=realm_${index}
realmM.displayName=Realm ${index} - ${realm}
realmM.enabled=true
realmM.registrationAllowed=true
realmM.accessTokenLifespan=60
realmM.passwordPolicy=hashIterations(27500)

rolePolicyM.name=role_policy_${index}
rolePolicyM.description=Role Policy ${index} - ${name}
rolePolicyM.logic=POSITIVE
rolePolicyM.decisionStrategy=UNANIMOUS

